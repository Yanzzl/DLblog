{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"note_test","provenance":[],"collapsed_sections":[],"mount_file_id":"1J8lyy_VJ8MNXDF8jYldCoBwb8kpt-nN-","authorship_tag":"ABX9TyOYW8QnQ90utXanw/3/adUv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"oqjxEZyFAhS3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617974686181,"user_tz":-120,"elapsed":72167,"user":{"displayName":"梅兰","photoUrl":"","userId":"03448777670247639325"}},"outputId":"9af6bcb7-1944-4a24-f9b3-1bb3a64bbc17"},"source":["!python drive/My\\ Drive/Colab\\ Notebooks/DL/train.py --epoch_count=0 --lambda_L1=5"],"execution_count":1,"outputs":[{"output_type":"stream","text":["----------------- Options ---------------\n","                batchSize: 1                             \n","                    beta1: 0.5                           \n","          checkpoints_dir: drive/My Drive/Colab Notebooks/DL/checkpoints\n","           continue_train: False                         \n","                  de_root: drive/My Drive/Colab Notebooks/DL/data_face/train/de/\n","             display_freq: 10                            \n","display_single_pane_ncols: 0                             \n","              epoch_count: 0                             \t[default: 118]\n","                 fineSize: 256                           \n","                  gpu_ids: 0                             \n","                init_gain: 0.02                          \n","                init_type: normal                        \n","                 input_nc: 6                             \n","                  isTrain: True                          \t[default: None]\n","               lambda_Gan: 0.2                           \n","                lambda_L1: 5                             \t[default: 1]\n","                 lambda_P: 0.2                           \n","                 lambda_S: 250                           \n","                  log_dir: drive/My Drive/Colab Notebooks/DL/logs\n","                       lr: 0.0002                        \n","           lr_decay_iters: 50                            \n","                lr_policy: lambda                        \n","                mask_root: drive/My Drive/Colab Notebooks/DL/data_face/train/mask/\n","                    model: training1                     \n","                 nThreads: 2                             \n","               n_layers_D: 3                             \n","                     name: Mutual Encoder-Decoder        \n","                      ndf: 64                            \n","                      ngf: 64                            \n","                    niter: 20                            \n","              niter_decay: 100                           \n","                     norm: instance                      \n","              num_workers: 4                             \n","                output_nc: 3                             \n","                    phase: train                         \n","               print_freq: 50                            \n","          save_epoch_freq: 2                             \n","         save_latest_freq: 5000                          \n","                  st_root: drive/My Drive/Colab Notebooks/DL/data_face/train/st/\n","              use_dropout: False                         \n","              which_epoch:                               \n","----------------- End -------------------\n","[0]\n","1\n","/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py:477: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 2, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.\n","  cpuset_checked))\n","Downloading: \"https://download.pytorch.org/models/vgg16-397923af.pth\" to /root/.cache/torch/hub/checkpoints/vgg16-397923af.pth\n","100% 528M/528M [00:03<00:00, 167MB/s]\n","Traceback (most recent call last):\n","  File \"drive/My Drive/Colab Notebooks/DL/train.py\", line 50, in <module>\n","    model = create_model(opt)\n","  File \"/content/drive/My Drive/Colab Notebooks/DL/models/models.py\", line 3, in create_model\n","    model = MEDFE(opt)\n","  File \"/content/drive/My Drive/Colab Notebooks/DL/models/MEDFE.py\", line 22, in __init__\n","    self.PerceptualLoss = PerceptualLoss()\n","  File \"/content/drive/My Drive/Colab Notebooks/DL/models/loss.py\", line 162, in __init__\n","    self.add_module('vgg', VGG16().cuda())\n","  File \"/content/drive/My Drive/Colab Notebooks/DL/models/loss.py\", line 9, in __init__\n","    features = models.vgg16(pretrained=True).features\n","  File \"/usr/local/lib/python3.7/dist-packages/torchvision/models/vgg.py\", line 157, in vgg16\n","    return _vgg('vgg16', 'D', False, pretrained, progress, **kwargs)\n","  File \"/usr/local/lib/python3.7/dist-packages/torchvision/models/vgg.py\", line 97, in _vgg\n","    model = VGG(make_layers(cfgs[cfg], batch_norm=batch_norm), **kwargs)\n","  File \"/usr/local/lib/python3.7/dist-packages/torchvision/models/vgg.py\", line 37, in __init__\n","    nn.Linear(512 * 7 * 7, 4096),\n","  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/modules/linear.py\", line 84, in __init__\n","    self.reset_parameters()\n","  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/modules/linear.py\", line 87, in reset_parameters\n","    init.kaiming_uniform_(self.weight, a=math.sqrt(5))\n","  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/init.py\", line 379, in kaiming_uniform_\n","    return tensor.uniform_(-bound, bound)\n","KeyboardInterrupt\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-qYkPjRrWOeh","outputId":"db2d00fc-bd0d-465b-d8f6-9aa9b8f8525a"},"source":["!python drive/My\\ Drive/Colab\\ Notebooks/DL/train.py --lambda_L1=5 --continue_train --epoch_count=85 --which_epoch=84"],"execution_count":null,"outputs":[{"output_type":"stream","text":["----------------- Options ---------------\n","                batchSize: 1                             \n","                    beta1: 0.5                           \n","          checkpoints_dir: drive/My Drive/Colab Notebooks/DL/checkpoints\n","           continue_train: True                          \t[default: False]\n","                  de_root: drive/My Drive/Colab Notebooks/DL/data_face/train/de/\n","             display_freq: 10                            \n","display_single_pane_ncols: 0                             \n","              epoch_count: 82                            \t[default: 118]\n","                 fineSize: 256                           \n","                  gpu_ids: 0                             \n","                init_gain: 0.02                          \n","                init_type: normal                        \n","                 input_nc: 6                             \n","                  isTrain: True                          \t[default: None]\n","               lambda_Gan: 0.2                           \n","                lambda_L1: 1                             \n","                 lambda_P: 0.2                           \n","                 lambda_S: 250                           \n","                  log_dir: drive/My Drive/Colab Notebooks/DL/logs\n","                       lr: 0.0002                        \n","           lr_decay_iters: 50                            \n","                lr_policy: lambda                        \n","                mask_root: drive/My Drive/Colab Notebooks/DL/data_face/train/mask/\n","                    model: training1                     \n","                 nThreads: 2                             \n","               n_layers_D: 3                             \n","                     name: Mutual Encoder-Decoder        \n","                      ndf: 64                            \n","                      ngf: 64                            \n","                    niter: 20                            \n","              niter_decay: 100                           \n","                     norm: instance                      \n","              num_workers: 4                             \n","                output_nc: 3                             \n","                    phase: train                         \n","               print_freq: 50                            \n","          save_epoch_freq: 2                             \n","         save_latest_freq: 5000                          \n","                  st_root: drive/My Drive/Colab Notebooks/DL/data_face/train/st/\n","              use_dropout: False                         \n","              which_epoch: 81                            \t[default: ]\n","----------------- End -------------------\n","[0]\n","1\n","/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py:477: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 2, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.\n","  cpuset_checked))\n","Downloading: \"https://download.pytorch.org/models/vgg16-397923af.pth\" to /root/.cache/torch/hub/checkpoints/vgg16-397923af.pth\n","100% 528M/528M [00:02<00:00, 239MB/s]\n","initialize network with normal\n","/content/drive/My Drive/Colab Notebooks/DL/models/networks.py:47: UserWarning: nn.init.normal is now deprecated in favor of nn.init.normal_.\n","  init.normal(m.weight.data, 0.0, gain)\n","/content/drive/My Drive/Colab Notebooks/DL/models/networks.py:57: UserWarning: nn.init.constant is now deprecated in favor of nn.init.constant_.\n","  init.constant(m.bias.data, 0.0)\n","initialize network with normal\n","initialize network with normal\n","initialize network with normal\n","initialize network with normal\n","---------- Networks initialized -------------\n","DataParallel(\n","  (module): Encoder(\n","    (middle): Sequential(\n","      (0): ResnetBlock(\n","        (conv_block): Sequential(\n","          (0): ReflectionPad2d((2, 2, 2, 2))\n","          (1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), dilation=(2, 2), bias=False)\n","          (2): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (3): ReLU(inplace=True)\n","          (4): ReflectionPad2d((1, 1, 1, 1))\n","          (5): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)\n","          (6): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        )\n","      )\n","      (1): ResnetBlock(\n","        (conv_block): Sequential(\n","          (0): ReflectionPad2d((2, 2, 2, 2))\n","          (1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), dilation=(2, 2), bias=False)\n","          (2): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (3): ReLU(inplace=True)\n","          (4): ReflectionPad2d((1, 1, 1, 1))\n","          (5): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)\n","          (6): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        )\n","      )\n","      (2): ResnetBlock(\n","        (conv_block): Sequential(\n","          (0): ReflectionPad2d((2, 2, 2, 2))\n","          (1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), dilation=(2, 2), bias=False)\n","          (2): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (3): ReLU(inplace=True)\n","          (4): ReflectionPad2d((1, 1, 1, 1))\n","          (5): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)\n","          (6): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        )\n","      )\n","      (3): ResnetBlock(\n","        (conv_block): Sequential(\n","          (0): ReflectionPad2d((2, 2, 2, 2))\n","          (1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), dilation=(2, 2), bias=False)\n","          (2): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (3): ReLU(inplace=True)\n","          (4): ReflectionPad2d((1, 1, 1, 1))\n","          (5): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)\n","          (6): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        )\n","      )\n","    )\n","    (Encoder_1): UnetSkipConnectionEBlock(\n","      (model): Sequential(\n","        (0): Conv2d(6, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","      )\n","    )\n","    (Encoder_2): UnetSkipConnectionEBlock(\n","      (model): Sequential(\n","        (0): LeakyReLU(negative_slope=0.2, inplace=True)\n","        (1): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","        (2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","      )\n","    )\n","    (Encoder_3): UnetSkipConnectionEBlock(\n","      (model): Sequential(\n","        (0): LeakyReLU(negative_slope=0.2, inplace=True)\n","        (1): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","        (2): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","      )\n","    )\n","    (Encoder_4): UnetSkipConnectionEBlock(\n","      (model): Sequential(\n","        (0): LeakyReLU(negative_slope=0.2, inplace=True)\n","        (1): Conv2d(256, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","        (2): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","      )\n","    )\n","    (Encoder_5): UnetSkipConnectionEBlock(\n","      (model): Sequential(\n","        (0): LeakyReLU(negative_slope=0.2, inplace=True)\n","        (1): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","        (2): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","      )\n","    )\n","    (Encoder_6): UnetSkipConnectionEBlock(\n","      (model): Sequential(\n","        (0): LeakyReLU(negative_slope=0.2, inplace=True)\n","        (1): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","      )\n","    )\n","  )\n",")\n","Total number of parameters: 30026432\n","DataParallel(\n","  (module): Decoder(\n","    (Decoder_1): UnetSkipConnectionDBlock(\n","      (model): Sequential(\n","        (0): ReLU(inplace=True)\n","        (1): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","        (2): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","      )\n","    )\n","    (Decoder_2): UnetSkipConnectionDBlock(\n","      (model): Sequential(\n","        (0): ReLU(inplace=True)\n","        (1): ConvTranspose2d(1024, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","        (2): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","      )\n","    )\n","    (Decoder_3): UnetSkipConnectionDBlock(\n","      (model): Sequential(\n","        (0): ReLU(inplace=True)\n","        (1): ConvTranspose2d(1024, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","        (2): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","      )\n","    )\n","    (Decoder_4): UnetSkipConnectionDBlock(\n","      (model): Sequential(\n","        (0): ReLU(inplace=True)\n","        (1): ConvTranspose2d(512, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","        (2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","      )\n","    )\n","    (Decoder_5): UnetSkipConnectionDBlock(\n","      (model): Sequential(\n","        (0): ReLU(inplace=True)\n","        (1): ConvTranspose2d(256, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","        (2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","      )\n","    )\n","    (Decoder_6): UnetSkipConnectionDBlock(\n","      (model): Sequential(\n","        (0): ReLU(inplace=True)\n","        (1): ConvTranspose2d(128, 3, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","        (2): Tanh()\n","      )\n","    )\n","  )\n",")\n","Total number of parameters: 18098499\n","DataParallel(\n","  (module): PCblock(\n","    (pc_block): PCconv(\n","      (down_128): ConvDown(\n","        (model): Sequential(\n","          (0): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n","          (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","          (3): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n","          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (5): LeakyReLU(negative_slope=0.2, inplace=True)\n","        )\n","      )\n","      (down_64): ConvDown(\n","        (model): Sequential(\n","          (0): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n","          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","        )\n","      )\n","      (down_32): ConvDown(\n","        (model): Sequential(\n","          (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","        )\n","      )\n","      (down_16): ConvDown(\n","        (model): Sequential(\n","          (0): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n","          (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        )\n","      )\n","      (down_8): ConvDown(\n","        (model): Sequential(\n","          (0): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n","          (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","          (3): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n","          (4): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        )\n","      )\n","      (down_4): ConvDown(\n","        (model): Sequential(\n","          (0): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n","          (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","          (3): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n","          (4): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (5): LeakyReLU(negative_slope=0.2, inplace=True)\n","          (6): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n","          (7): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        )\n","      )\n","      (down): ConvDown(\n","        (model): Sequential(\n","          (0): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","        )\n","      )\n","      (fuse): ConvDown(\n","        (model): Sequential(\n","          (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","        )\n","      )\n","      (up): ConvUp(\n","        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","        (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (relu): LeakyReLU(negative_slope=0.2)\n","      )\n","      (up_128): ConvUp(\n","        (conv): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","        (bn): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (relu): LeakyReLU(negative_slope=0.2)\n","      )\n","      (up_64): ConvUp(\n","        (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","        (bn): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (relu): LeakyReLU(negative_slope=0.2)\n","      )\n","      (up_32): ConvUp(\n","        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","        (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (relu): LeakyReLU(negative_slope=0.2)\n","      )\n","      (base): BASE(\n","        (model): Sequential(\n","          (0): SELayer(\n","            (avg_pool): AdaptiveAvgPool2d(output_size=1)\n","            (fc): Sequential(\n","              (0): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))\n","              (1): ReLU(inplace=True)\n","              (2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))\n","              (3): Sigmoid()\n","            )\n","          )\n","        )\n","        (down): Sequential(\n","          (0): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","          (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","          (2): LeakyReLU(negative_slope=0.2)\n","        )\n","      )\n","      (cov_3): Sequential(\n","        (0): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","        (1): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","        (2): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","        (3): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","        (4): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","      )\n","      (cov_5): Sequential(\n","        (0): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","        (1): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","        (2): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","        (3): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","        (4): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","      )\n","      (cov_7): Sequential(\n","        (0): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","        (1): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","        (2): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","        (3): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","        (4): PCBActiv(\n","          (conv): PartialConv(\n","            (input_conv): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n","            (mask_conv): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n","          )\n","          (bn): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)\n","          (activation): LeakyReLU(negative_slope=0.2)\n","        )\n","      )\n","      (activation): LeakyReLU(negative_slope=0.2)\n","    )\n","    (loss): Sequential(\n","      (0): InnerCos\n","    )\n","  )\n",")\n","Total number of parameters: 82191139\n","DataParallel(\n","  (module): NLayerDiscriminator(\n","    (model): Sequential(\n","      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","      (1): LeakyReLU(negative_slope=0.2, inplace=True)\n","      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","      (3): LeakyReLU(negative_slope=0.2, inplace=True)\n","      (4): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","      (5): LeakyReLU(negative_slope=0.2, inplace=True)\n","      (6): Conv2d(256, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","      (7): LeakyReLU(negative_slope=0.2, inplace=True)\n","      (8): Conv2d(512, 1, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","    )\n","  )\n",")\n","Total number of parameters: 2764737\n","DataParallel(\n","  (module): NLayerDiscriminator(\n","    (model): Sequential(\n","      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","      (1): LeakyReLU(negative_slope=0.2, inplace=True)\n","      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","      (3): LeakyReLU(negative_slope=0.2, inplace=True)\n","      (4): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","      (5): LeakyReLU(negative_slope=0.2, inplace=True)\n","      (6): Conv2d(256, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","      (7): LeakyReLU(negative_slope=0.2, inplace=True)\n","      (8): Conv2d(512, 1, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n","    )\n","  )\n",")\n","Total number of parameters: 2764737\n","-----------------------------------------------\n","Loading pre-trained network!\n","81\n","EN\n","drive/My Drive/Colab Notebooks/DL/checkpoints/Mutual Encoder-Decoder/81_net_EN.pth\n","DE\n","drive/My Drive/Colab Notebooks/DL/checkpoints/Mutual Encoder-Decoder/81_net_DE.pth\n","MEDFE\n","drive/My Drive/Colab Notebooks/DL/checkpoints/Mutual Encoder-Decoder/81_net_MEDFE.pth\n","D\n","drive/My Drive/Colab Notebooks/DL/checkpoints/Mutual Encoder-Decoder/81_net_D.pth\n","F\n","drive/My Drive/Colab Notebooks/DL/checkpoints/Mutual Encoder-Decoder/81_net_F.pth\n","model [training1] was created\n","2021-04-05 10:39:09.598820: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0\n","/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py:477: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 2, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.\n","  cpuset_checked))\n","/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py:3458: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.\n","  \"See the documentation of nn.Upsample for details.\".format(mode)\n","/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py:1709: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.\n","  warnings.warn(\"nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.\")\n","/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py:1204: UserWarning: Output 0 of ScatterBackward is a view and is being modified inplace. This view was created inside a custom Function (or because an input was returned as-is) and the autograd logic to handle view+inplace would override the custom backward associated with the custom Function, leading to incorrect gradients. This behavior is deprecated and will be forbidden starting version 1.6. You can remove this warning by cloning the output of the custom Function. (Triggered internally at  /pytorch/torch/csrc/autograd/variable.cpp:547.)\n","  result = torch.relu_(input)\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","End of epoch 82 / 120 \t Time Taken: 1214 sec\n","learning rate = 0.0000733\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","End of epoch 83 / 120 \t Time Taken: 1219 sec\n","learning rate = 0.0000713\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","saving the model at the end of epoch 84, iters 6000\n","100% 200/200 [03:02<00:00,  1.10it/s]\n","['drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02200.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02201.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02202.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02203.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02204.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02205.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02206.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02207.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02208.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02209.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02210.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02211.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02212.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02213.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02214.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02215.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02216.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02217.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02218.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02219.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02220.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02221.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02222.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02223.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02224.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02225.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02226.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02227.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02228.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02229.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02230.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02231.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02232.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02233.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02234.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02235.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02236.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02237.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02238.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02239.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02240.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02241.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02242.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02243.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02244.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02245.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02246.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02247.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02248.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02249.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02250.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02251.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02252.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02253.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02254.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02255.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02256.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02257.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02258.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02259.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02260.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02261.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02262.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02263.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02264.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02265.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02266.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02267.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02268.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02269.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02270.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02271.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02272.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02273.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02274.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02275.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02276.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02277.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02278.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02279.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02280.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02281.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02282.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02283.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02284.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02285.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02286.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02287.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02288.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02289.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02290.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02291.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02292.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02293.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02294.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02295.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02296.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02297.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02298.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02299.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02300.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02301.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02302.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02303.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02304.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02305.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02306.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02307.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02308.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02309.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02310.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02311.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02312.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02313.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02314.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02315.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02316.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02317.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02318.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02319.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02320.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02321.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02322.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02323.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02324.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02325.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02326.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02327.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02328.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02329.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02330.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02331.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02332.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02333.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02334.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02335.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02336.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02337.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02338.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02339.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02340.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02341.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02342.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02343.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02344.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02345.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02346.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02347.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02348.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02349.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02350.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02351.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02352.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02353.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02354.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02355.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02356.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02357.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02358.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02359.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02360.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02361.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02362.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02363.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02364.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02365.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02366.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02367.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02368.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02369.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02370.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02371.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02372.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02373.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02374.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02375.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02376.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02377.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02378.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02379.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02380.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02381.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02382.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02383.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02384.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02385.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02386.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02387.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02388.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02389.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02390.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02391.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02392.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02393.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02394.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02395.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02396.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02397.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02398.jpg', 'drive/My Drive/Colab Notebooks/DL/data_face/validation/de/02399.jpg']\n","Average: PSNR: 23.535819 dB, SSIM: 0.791555\n","<Figure size 640x480 with 1 Axes>\n","<Figure size 640x480 with 1 Axes>\n","[84]\n","[23.535818716600662]\n","[0.791555102048622]\n","End of epoch 84 / 120 \t Time Taken: 1463 sec\n","learning rate = 0.0000693\n","/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py:477: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 2, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.\n","  cpuset_checked))\n","/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py:3458: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.\n","  \"See the documentation of nn.Upsample for details.\".format(mode)\n","/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py:1709: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.\n","  warnings.warn(\"nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.\")\n","/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py:1204: UserWarning: Output 0 of ScatterBackward is a view and is being modified inplace. This view was created inside a custom Function (or because an input was returned as-is) and the autograd logic to handle view+inplace would override the custom backward associated with the custom Function, leading to incorrect gradients. This behavior is deprecated and will be forbidden starting version 1.6. You can remove this warning by cloning the output of the custom Function. (Triggered internally at  /pytorch/torch/csrc/autograd/variable.cpp:547.)\n","  result = torch.relu_(input)\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n","iteration time: 0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9gG3_Td5Jz7a"},"source":["!python drive/My\\ Drive/Colab\\ Notebooks/DL/test.py"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"h_-IwDyXd0NB"},"source":["!pip install --upgrade torch torchvision torchaudio"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hrbsXspgaUDQ"},"source":["%pip install pytorch"],"execution_count":null,"outputs":[]}]}